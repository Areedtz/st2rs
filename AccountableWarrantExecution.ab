Problem: AccountableWarrantExecution;
Principals: Source, Investigator, Decryptor;
Knowledge: msk:mastersecretkey@Decryptor, uid:id@Investigator, uid:id@Source, mpk:masterpublickey@Source;
Types: mastersecretkey, masterpublickey, secretkey, id;
Functions: enc(masterpublickey, id, bitstring) -> bitstring,
           dec(bitstring, secretkey) -> bitstring,
           extract(mastersecretkey, id) -> secretkey,
           blind(id) -> bitstring,
           blindextract(mastersecretkey, bitstring) -> secretkey;
Equations: dec(enc(mpk, uid, msg), extract(msk, uid)) = msg,
           blindextract(msk, blind(uid)) = extract(msk, uid);
Formats: M1(bitstring), M2(bitstring), M3(secretkey);
Protocol:
Source {
    new msg: bitstring;
    let ct = enc(mpk, uid, msg);
}
Source -> Investigator: x = M1<ct>
Investigator {
    let M1<ct> = x;
    let buid = blind(uid);
}
Investigator -> Decryptor: y = M2<buid>
Decryptor {
    let M2<buid> = y;
    let sk = blindextract(msk, buid);
}
Decryptor -> Investigator: z = M3<sk>
Investigator {
    let M3<sk> = z;
    let msg = dec(ct, sk);
}
end
